{
  "name": "wsobserver",
  "version": "1.1.1",
  "description": "websocket client used in electron main process,pub/sub message in render process",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/116356754/wsobserver.git"
  },
  "keywords": [
    "electron",
    "websocket",
    "pub",
    "sub"
  ],
  "author": {
    "name": "wangky"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/116356754/wsobserver/issues"
  },
  "homepage": "https://github.com/116356754/wsobserver#readme",
  "dependencies": {
    "ws": "^1.1.1"
  },
  "readme": "##wsobserver\r\n\r\nwebsocket client for Electron applications.\r\n\r\nwe use wsobserver module in electron main process,wsobserver use thrid party module to connect remote websocket server.\r\n\r\nElectron render process receive websocket message from Electron main process throught wsobserver module.we only to add render page's webcontent into wsobserver.\r\n\r\n\t\t\r\n##Usage\r\n    npm install wsobserver --save\r\n\r\nRequire the module in an Electron web page.\r\n\r\n    var wsobser = require('wsobserver')\r\n\r\n### Electron main process\r\n#### set up gloabl object\r\n\t\r\n\t//share object in render process and main process\r\n\tglobal.sharedObj = {\r\n\twsObserver:require('wsobserver/observer')};\r\n\r\n####websocket usage\r\n open a websocket client:\r\n\t\r\n    var ws = new wsobser('ws://localhost:8088');\r\n    ws.ws_connect();\r\n    \r\n open a websocket client:\r\n\r\n\tws.ws_sendmsg('hello server');\r\n\r\n close a websocket client:\r\n\r\n\tws.ws_stop();\r\n\r\n\r\n### Electron render process\r\n\r\n    var ipcRenderer = require('electron').ipcRenderer;\r\n    var remote = require('electron').remote;\r\n\t\r\n\t//get wsobserver in main process share object \r\n\tvar observer = remote.getGlobal('sharedObj').wsObserver;\r\n\r\n\t//websocket handle function\r\n    ipcRenderer.on('ws-title-message', function (e, data) {\r\n         alert(data.toString());\r\n    });\r\n\r\n    //listen for websocket message from the main process   \r\n    function setupWSObserver(title) {\r\n       observer.subscribe(remote.getCurrentWebContents(), title, 'ws-title-message');\r\n    }\r\n\r\n    function clearWSObserver(title) {\r\n        observer.unsubscribe(remote.getCurrentWebContents(), title);\r\n    }",
  "readmeFilename": "README.md",
  "gitHead": "0fe8ffd5f932d736debf4b2f6567f31e3fa580c7",
  "_id": "wsobserver@1.0.0",
  "_shasum": "c0aee820566bf446e43f004f8adb30fd2333050d",
  "_from": "wsobserver@*"
}
